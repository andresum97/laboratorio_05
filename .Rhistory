trainP2 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
train[is.na(train)]<-0
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(train),nrow(train)*porcentaje)
train1<-train[corte,]
test1<-train[-corte,]
fitMLM_Price<-lm(SalePrice~.,data = train)
summary(fitMLM_Price)
plot(train)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(train)
matriz_cor
corrplot(matriz_cor)
matriz_cor <- cor(trainP1)
matriz_cor
corrplot(matriz_cor)
matriz_cor <- cor(trainP2)
matriz_cor
corrplot(matriz_cor)
trainP3 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","SalePrice")]
matriz_cor <- cor(trainP3)
matriz_cor
corrplot(matriz_cor)
```{r}
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP3)
matriz_cor
corrplot(matriz_cor)
fitMLM_Price<-lm(SalePrice~.,data = trainP3)
summary(fitMLM_Petal)
summary(fitMLM_Price)
plot(fitMLM_Price)
plot(fitMLM_Price)
hist(fitMLM_Price$residuals)
boxplot(fitMLM_Price$residuals)
hist(fitMLM_Price$residuals)
knitr::opts_chunk$set(echo = TRUE)
clear
knitr::opts_chunk$set(echo = TRUE)
#Ubicacion de archivos en computadoras
setwd("C:/Users/Gustavo/Desktop/SEPTIMO SEMESTRE/MINERIA/HDT4/laboratorio_05")
datos <- read.csv("train.csv", stringsAsFactors = FALSE)
train <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP1 <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","SalePrice")]
trainP2 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP3 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","SalePrice")]
train[is.na(train)]<-0
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(train),nrow(train)*porcentaje)
train1<-train[corte,]
test1<-train[-corte,]
fitMLM_Price<-lm(SalePrice~.,data = train)
summary(fitMLM_Price)
plot(train)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(train)
matriz_cor
corrplot(matriz_cor)
matriz_cor <- cor(trainP1)
matriz_cor
corrplot(matriz_cor)
matriz_cor <- cor(trainP2)
matriz_cor
corrplot(matriz_cor)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP3)
matriz_cor
corrplot(matriz_cor)
fitMLM_Price<-lm(SalePrice~.,data = trainP3)
summary(fitMLM_Price)
plot(fitMLM_Price)
hist(fitMLM_Price$residuals)
boxplot(fitMLM_Price$residuals)
lillie.test(fitMLM_Price$residuals)
lillie.test(fitMLM_Price$residuals)
lillie.test(fitMLM_Price$residuals)
library(nortest)
lillie.test(fitMLM_Price$residuals)
knitr::opts_chunk$set(echo = TRUE)
porcentaje<-0.7
datos<-iris
set.seed(123)
datos$y<- as.numeric(datos$Species)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
train<-datos[corte,]
test<-datos[-corte,]
knitr::opts_chunk$set(echo = TRUE)
#Ubicacion de archivos en computadoras
setwd("C:/Users/Gustavo/Desktop/SEPTIMO SEMESTRE/MINERIA/HDT4/laboratorio_05")
datos <- read.csv("train.csv", stringsAsFactors = FALSE)
train <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP1 <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","SalePrice")]
trainP2 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP3 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","SalePrice")]
train[is.na(train)]<-0
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(train),nrow(train)*porcentaje)
train1<-train[corte,]
test1<-train[-corte,]
fitMLM_Price<-lm(SalePrice~.,data = train)
summary(fitMLM_Price)
plot(train)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(train)
matriz_cor
corrplot(matriz_cor)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP1)
matriz_cor
corrplot(matriz_cor)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP2)
matriz_cor
corrplot(matriz_cor)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP2)
matriz_cor
corrplot(matriz_cor)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP3)
matriz_cor
corrplot(matriz_cor)
fitMLM_Price<-lm(SalePrice~.,data = trainP3)
summary(fitMLM_Price)
plot(fitMLM_Price)
library(nortest)
lillie.test(fitMLM_Price$residuals)
head(test1)
predMLM<-predict(fitMLM_Price,newdata = test1[,c(1,3,4)])
RMSE(predMLM,test1$SalePrice)
predMLM<-predict(fitMLM_Price,newdata = test1[,c(1,3,4)])
library(caret)
RMSE(predMLM,test1$SalePrice)
plot(test1$SalePrice,col="blue")
points(predMLM, col="red")
plot(test1$SalePrice,col="blue")
points(predMLM, col="red")
summary(test1$SalePrice-predMLM)
knitr::opts_chunk$set(echo = TRUE)
#Ubicacion de archivos en computadoras
setwd("C:/Users/Gustavo/Desktop/SEPTIMO SEMESTRE/MINERIA/HDT4/laboratorio_05")
datos <- read.csv("train.csv", stringsAsFactors = FALSE)
train <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP1 <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","SalePrice")]
trainP2 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP3 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","SalePrice")]
train[is.na(train)]<-0
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(train),nrow(train)*porcentaje)
train1<-train[corte,]
test1<-train[-corte,]
fitMLM_Price<-lm(SalePrice~.,data = train)
summary(fitMLM_Price)
plot(train)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(train)
matriz_cor
corrplot(matriz_cor)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP1)
matriz_cor
corrplot(matriz_cor)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP2)
matriz_cor
corrplot(matriz_cor)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP3)
matriz_cor
corrplot(matriz_cor)
fitMLM_Price<-lm(SalePrice~.,data = trainP3)
fitMLM_Price<-lm(SalePrice~.,data = trainP3)
summary(fitMLM_Price)
summary(test1$SalePrice-predMLM)
## Creacion del modelo de regresión - Codigo aportado por David Soto
## Regresión lineal simple
## Primero determinamos el conjuntos de datos para entrenamiento y para prueba.
## Dado que en el analisis exploratorio se vio que ls datos estan balanceados, se hizo una partición aleatoria
## utilizando el 70% de los datos para entrenamiento y el 30% de los datos para prueba.
setwd("C:/Users/Gustavo/Desktop/SEPTIMO SEMESTRE/MINERIA/HDT4/laboratorio_05")
porcentaje<-0.7
datos<-read.csv("train.csv", stringsAsFactors = FALSE)
set.seed(123)
flores<-iris
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
train<-datos[corte,]
test<-datos[-corte,]
## Revisamos de manera exploratoria que tipo de datos trae nuestro conjunto de entrenamiento
head(train)
## Revisamos de manera exploratoria que tipo de datos trae nuestro conjunto de test
head(test)
fitMLM_SalePrice<-lm(SalePrice~.,data = datos[,c("GrLivArea","YearBuilt","BsmtUnfSF","TotalBsmtSF","GarageArea","YearRemodAdd", "SalePrice")])
## Una vez que entrenamos en modelo podemos ver sus características.
summary(fitMLM_SalePrice)
## La ecuación de la regresión se puede escribir de la siguiente manera:
cat("SalePrice = ",round(fitMLM_SalePrice$coefficients[7],2), "YearRemodAdd + ", round(fitMLM_SalePrice$coefficients[6],2), "GarageArea + ", round(fitMLM_SalePrice$coefficients[5],2), "TotalBsmtSF", round(fitMLM_SalePrice$coefficients[4],2), "BsmtUnfSF + " , round(fitMLM_SalePrice$coefficients[3],2), "YearBuilt + ", round(fitMLM_SalePrice$coefficients[2],2), "GrLivArea", round(fitMLM_SalePrice$coefficients[1],2))
## Es posible que exista multicolinealidad entre las variables predictoras.
## Revisemos eso...
plot(datos[,c("GrLivArea","YearBuilt","BsmtUnfSF","TotalBsmtSF","GarageArea","YearRemodAdd", "SalePrice")])
## install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(datos[,c("GrLivArea","YearBuilt","BsmtUnfSF","TotalBsmtSF","GarageArea","YearRemodAdd", "SalePrice")])
matriz_cor
corrplot(matriz_cor)
## Se genera el modelo sin quitar ninguna de las variables
fitMLM_SalePrice<-lm(SalePrice~.,data = datos[,c("GrLivArea","YearBuilt","BsmtUnfSF","TotalBsmtSF","GarageArea","YearRemodAdd", "SalePrice")])
## Veamos ahora el resumen del modelo:
summary(fitMLM_SalePrice)
predL<-predict(fitMLM_SalePrice, newdata = test)
head(predL)
length(predL)
head(fitMLM_SalePrice$residuals)
## En los siguientes gráficos se pueden analizar los residuales.
plot(fitMLM_SalePrice)
library(nortest)
lillie.test(fitMLM_SalePrice$residuals)
## Eficiencia y Efectividad del modelo - Codigo aportado por David Soto
## Es posible que el modelo no sea tan bueno para predecir. Pero podemos probarlo.
predMLM<-predict(fitMLM_SalePrice,newdata = test[,c("GrLivArea","YearBuilt","BsmtUnfSF","TotalBsmtSF","GarageArea","YearRemodAdd", "SalePrice")])
library(caret)
RMSE(predMLM,test$SalePrice)
plot(test$SalePrice,col="blue")
points(predMLM, col="red")
summary(test$SalePrice-predMLM)
#Ubicacion de archivos en computadoras
setwd("C:/Users/Gustavo/Desktop/SEPTIMO SEMESTRE/MINERIA/HDT4/laboratorio_05")
datos <- read.csv("train.csv", stringsAsFactors = FALSE)
train <- datos
trainP1 <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","SalePrice")]
trainP2 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP3 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","SalePrice")]
train[is.na(train)]<-0
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(train),nrow(train)*porcentaje)
train1<-train[corte,]
test1<-train[-corte,]
fitMLM_Price<-lm(SalePrice~.,data = train[,c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")])
summary(fitMLM_Price)
plot(train)
#Ubicacion de archivos en computadoras
setwd("C:/Users/Gustavo/Desktop/SEPTIMO SEMESTRE/MINERIA/HDT4/laboratorio_05")
datos <- read.csv("train.csv", stringsAsFactors = FALSE)
train <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP1 <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","SalePrice")]
trainP2 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP3 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","SalePrice")]
train[is.na(train)]<-0
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(train),nrow(train)*porcentaje)
train1<-train[corte,]
test1<-train[-corte,]
fitMLM_Price<-lm(SalePrice~.,data = train)
summary(fitMLM_Price)
plot(train)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(train)
matriz_cor
corrplot(matriz_cor)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP1)
matriz_cor
corrplot(matriz_cor)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP2)
matriz_cor
corrplot(matriz_cor)
```{r}
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP3)
matriz_cor
corrplot(matriz_cor)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP3)
matriz_cor
corrplot(matriz_cor)
fitMLM_Price<-lm(SalePrice~.,data = trainP3)
summary(fitMLM_Price)
plot(fitMLM_Price)
hist(fitMLM_Price$residuals)
boxplot(fitMLM_Price$residuals)
lillie.test(fitMLM_Price$residuals)
predMLM<-predict(fitMLM_Price,newdata = test1[,c(1,3,4)])
library(caret)
RMSE(predMLM,test1$SalePrice)
plot(test1$SalePrice,col="blue")
plot(test1$SalePrice,col="blue")
points(predMLM, col="red")
summary(test1$SalePrice-predMLM)
## Creacion del modelo de regresión - Codigo aportado por David Soto
## Regresión lineal simple
## Primero determinamos el conjuntos de datos para entrenamiento y para prueba.
## Dado que en el analisis exploratorio se vio que ls datos estan balanceados, se hizo una partición aleatoria
## utilizando el 70% de los datos para entrenamiento y el 30% de los datos para prueba.
setwd("C:/Users/Gustavo/Desktop/SEPTIMO SEMESTRE/MINERIA/HDT4/laboratorio_05")
porcentaje<-0.7
datos<-read.csv("train.csv", stringsAsFactors = FALSE)
set.seed(123)
flores<-iris
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
train<-datos[corte,]
test<-datos[-corte,]
## Revisamos de manera exploratoria que tipo de datos trae nuestro conjunto de entrenamiento
head(train)
## Revisamos de manera exploratoria que tipo de datos trae nuestro conjunto de test
head(test)
fitMLM_SalePrice<-lm(SalePrice~.,data = datos[,c("GrLivArea","YearBuilt","BsmtUnfSF","TotalBsmtSF","GarageArea","YearRemodAdd", "SalePrice")])
## Una vez que entrenamos en modelo podemos ver sus características.
summary(fitMLM_SalePrice)
## La ecuación de la regresión se puede escribir de la siguiente manera:
cat("SalePrice = ",round(fitMLM_SalePrice$coefficients[7],2), "YearRemodAdd + ", round(fitMLM_SalePrice$coefficients[6],2), "GarageArea + ", round(fitMLM_SalePrice$coefficients[5],2), "TotalBsmtSF", round(fitMLM_SalePrice$coefficients[4],2), "BsmtUnfSF + " , round(fitMLM_SalePrice$coefficients[3],2), "YearBuilt + ", round(fitMLM_SalePrice$coefficients[2],2), "GrLivArea", round(fitMLM_SalePrice$coefficients[1],2))
## Es posible que exista multicolinealidad entre las variables predictoras.
## Revisemos eso...
plot(datos[,c("GrLivArea","YearBuilt","BsmtUnfSF","TotalBsmtSF","GarageArea","YearRemodAdd", "SalePrice")])
## install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(datos[,c("GrLivArea","YearBuilt","BsmtUnfSF","TotalBsmtSF","GarageArea","YearRemodAdd", "SalePrice")])
matriz_cor
corrplot(matriz_cor)
## Se genera el modelo sin quitar ninguna de las variables
fitMLM_SalePrice<-lm(SalePrice~.,data = datos[,c("GrLivArea","YearBuilt","BsmtUnfSF","TotalBsmtSF","GarageArea","YearRemodAdd", "SalePrice")])
## Veamos ahora el resumen del modelo:
summary(fitMLM_SalePrice)
predL<-predict(fitMLM_SalePrice, newdata = test)
head(predL)
length(predL)
head(fitMLM_SalePrice$residuals)
## En los siguientes gráficos se pueden analizar los residuales.
plot(fitMLM_SalePrice)
qqline(fitMLM_SalePrice$residuals, col="red")
library(nortest)
lillie.test(fitMLM_SalePrice$residuals)
## Eficiencia y Efectividad del modelo - Codigo aportado por David Soto
## Es posible que el modelo no sea tan bueno para predecir. Pero podemos probarlo.
predMLM<-predict(fitMLM_SalePrice,newdata = test[,c("GrLivArea","YearBuilt","BsmtUnfSF","TotalBsmtSF","GarageArea","YearRemodAdd", "SalePrice")])
library(caret)
RMSE(predMLM,test$SalePrice)
plot(test$SalePrice,col="blue")
points(predMLM, col="red")
summary(test$SalePrice-predMLM)
knitr::opts_chunk$set(echo = TRUE)
#Ubicacion de archivos en computadoras
setwd("C:/Users/Gustavo/Desktop/SEPTIMO SEMESTRE/MINERIA/HDT4/laboratorio_05")
datos <- read.csv("train.csv", stringsAsFactors = FALSE)
train <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP1 <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","SalePrice")]
trainP2 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP3 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","SalePrice")]
train[is.na(train)]<-0
datos <- read.csv("train.csv", stringsAsFactors = FALSE)
train <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP1 <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","SalePrice")]
trainP2 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP3 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","SalePrice")]
train[is.na(train)]<-0
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(train),nrow(train)*porcentaje)
train1<-train[corte,]
test1<-train[-corte,]
knitr::opts_chunk$set(echo = TRUE)
#Ubicacion de archivos en computadoras
setwd("C:/Users/Gustavo/Desktop/SEPTIMO SEMESTRE/MINERIA/HDT4/laboratorio_05")
datos <- read.csv("train.csv", stringsAsFactors = FALSE)
train <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP1 <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","SalePrice")]
trainP2 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP3 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","SalePrice")]
train[is.na(train)]<-0
porcentaje<-0.7
set.seed(200)
corte <- sample(nrow(train),nrow(train)*porcentaje)
train1<-train[corte,]
test1<-train[-corte,]
fitMLM_Price<-lm(SalePrice~.,data = train)
summary(fitMLM_Price)
knitr::opts_chunk$set(echo = TRUE)
#Ubicacion de archivos en computadoras
setwd("C:/Users/Gustavo/Desktop/SEPTIMO SEMESTRE/MINERIA/HDT4/laboratorio_05")
datos <- read.csv("train.csv", stringsAsFactors = FALSE)
train <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP1 <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","SalePrice")]
trainP2 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP3 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","SalePrice")]
train[is.na(train)]<-0
porcentaje<-0.7
set.seed(200)
corte <- sample(nrow(train),nrow(train)*porcentaje)
train1<-train[corte,]
test1<-train[-corte,]
fitMLM_Price<-lm(SalePrice~.,data = train)
summary(fitMLM_Price)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#Ubicacion de archivos en computadoras
setwd("C:/Users/Gustavo/Desktop/SEPTIMO SEMESTRE/MINERIA/HDT4/laboratorio_05")
datos <- read.csv("train.csv", stringsAsFactors = FALSE)
train <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP1 <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","SalePrice")]
trainP2 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP3 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","SalePrice")]
train[is.na(train)]<-0
porcentaje<-0.7
set.seed(200)
corte <- sample(nrow(train),nrow(train)*porcentaje)
train1<-train[corte,]
test1<-train[-corte,]
head(test1)
fitMLM_Price<-lm(SalePrice~.,data = train)
summary(fitMLM_Price)
plot(fitMLM_Price)
hist(fitMLM_Price$residuals)
boxplot(fitMLM_Price$residuals)
predMLM<-predict(fitMLM_Price,newdata = test1[,c(1,3,4)])
library(caret)
head(test1[,c(1,3,4)])
head(test1)
knitr::opts_chunk$set(echo = TRUE)
#Ubicacion de archivos en computadoras
setwd("C:/Users/Gustavo/Desktop/SEPTIMO SEMESTRE/MINERIA/HDT4/laboratorio_05")
datos <- read.csv("train.csv", stringsAsFactors = FALSE)
train <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP1 <- datos[c("YearBuilt","YearRemodAdd","FullBath","TotRmsAbvGrd","SalePrice")]
trainP2 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","GarageCars","SalePrice")]
trainP3 <- datos[c("YearBuilt","FullBath","TotRmsAbvGrd","SalePrice")]
train[is.na(train)]<-0
porcentaje<-0.7
set.seed(200)
corte <- sample(nrow(train),nrow(train)*porcentaje)
train1<-train[corte,]
test1<-train[-corte,]
head(test1)
fitMLM_Price<-lm(SalePrice~.,data = train)
summary(fitMLM_Price)
plot(train)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(train)
matriz_cor
corrplot(matriz_cor)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP1)
matriz_cor
corrplot(matriz_cor)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP2)
matriz_cor
corrplot(matriz_cor)
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP3)
matriz_cor
corrplot(matriz_cor)
Probemos utilizar los datos de TrainP1 quitando la variable de GarageCar
```{r}
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP1)
matriz_cor
corrplot(matriz_cor)
```
Probemos utilizar los datos de TrainP2 quitando la variable de YearRemodAdd
```{r}
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP2)
matriz_cor
corrplot(matriz_cor)
```
Probemos utilizar los datos de TrainP3 quitando las 2 variables GarageCar y YearRemodAdd
```{r}
# install.packages("corrplot")
library(corrplot)
matriz_cor <- cor(trainP3)
matriz_cor
corrplot(matriz_cor)
```
### Nuevo modelo
Ahora realicemos el modelo lineal con los datos de trainP3
```{r}
fitMLM_Price<-lm(SalePrice~.,data = trainP3)
```
Resumen del modelo
```{r}
summary(fitMLM_Price)
```
plot(fitMLM_Price)
